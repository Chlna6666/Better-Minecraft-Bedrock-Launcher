name: build-latest

on:
  push:
    branches: [ master ]
  workflow_dispatch:  # 手动触发

jobs:
  build_windows:
    name: Build on Windows
    runs-on: windows-latest
    permissions:
      contents: write

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4

      - name: ♻️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'   # 内置 npm 缓存

      - name: ⚡ Restore node_modules cache (optional)
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 🦀 Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: ⚡ Cache cargo (registry, git, target, bin)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-v1
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: 📦 Install dependencies
        run: npm ci --ignore-scripts

      - name: 🚚 Install Tauri CLI
        run: cargo install tauri-cli --locked || true
        # 如果缓存里已有 tauri-cli，就跳过

      - name: 🚀 Build Tauri App
        run: cargo tauri build

      - name: 📦 Move built exe & installer to new build directory
        run: |
          if (!(Test-Path build)) { New-Item -ItemType Directory -Path build }
          Copy-Item src-tauri/target/release/*.exe build -ErrorAction SilentlyContinue
          Copy-Item src-tauri/target/release/bundle/nsis/*.exe build -ErrorAction SilentlyContinue

      - name: 📤 Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-windows-build
          path: ./build