name: build-and-prerelease

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-v1
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install dependencies
        run: npm ci --ignore-scripts

      - name: Build Tauri App
        run: cargo tauri build
        working-directory: .

      - name: Collect installer/exe
        run: |
          if (!(Test-Path -Path build)) { New-Item -ItemType Directory -Path build }
          Copy-Item -Path src-tauri\target\release\*.exe -Destination build -Force -ErrorAction SilentlyContinue

      - name: Get version from Cargo.toml
        id: get_version
        shell: powershell
        run: |
          $ct = Get-Content src-tauri\Cargo.toml -Raw
          if ($ct -match '^\s*version\s*=\s*"(.*?)"' ) {
            $v = $Matches[1]
          } else {
            $v = "0.0.0"
          }
          echo "version=$v" >> $env:GITHUB_OUTPUT

      - name: Create Pre-release and upload assets
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.get_version.outputs.version }}-pre
          name: "Pre-release v${{ steps.get_version.outputs.version }}"
          files: build/*.exe
          draft: false
          prerelease: true
