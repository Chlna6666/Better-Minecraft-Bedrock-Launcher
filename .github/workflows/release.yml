name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: windows-latest
    concurrency:
      group: release-${{ github.ref_name }}
      cancel-in-progress: true

    steps:
      - name: Checkout repository (fetch tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo (optional)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-v1
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install frontend dependencies
        run: npm ci
        shell: pwsh

      - name: Install @tauri-apps/cli globally (no npx)
        run: npm install -g @tauri-apps/cli
        shell: pwsh

      - name: Build Tauri
        run: npm run tauri:build
        shell: pwsh
        env:
          CI: false

      - name: Verify expected exe exists and set output
        id: find_exe
        shell: pwsh
        run: |
          $expected = "src-tauri/target/release/better_minecraft_bedrock_launcher.exe"
          if (Test-Path $expected) {
            $p = (Resolve-Path $expected).Path.Replace('\','/')
            Write-Host "Found exe: $p"
            echo "EXE_PATH=$p" >> $env:GITHUB_OUTPUT
          } else {
            Write-Error "Expected exe not found: $expected"
            exit 1
          }

      - name: Upload single exe to GitHub Release (create if needed)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: "Automated release for ${{ github.ref_name }}"
          draft: false
          prerelease: false
          files: ${{ steps.find_exe.outputs.EXE_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
